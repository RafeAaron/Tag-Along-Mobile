// Generated by view binder compiler. Do not edit!
package com.example.tagalong.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tagalong.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VerificationConfirmationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backArrowVerification;

  @NonNull
  public final TextView carColor;

  @NonNull
  public final TextView carModel;

  @NonNull
  public final TextView carNumberPlate;

  @NonNull
  public final TextView carType;

  @NonNull
  public final TextView driverContact;

  @NonNull
  public final TextView verificationConfirmationHeading;

  @NonNull
  public final ConstraintLayout verificationConfirmationMain;

  @NonNull
  public final ImageView verifiedProfilePicture;

  private VerificationConfirmationBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backArrowVerification, @NonNull TextView carColor,
      @NonNull TextView carModel, @NonNull TextView carNumberPlate, @NonNull TextView carType,
      @NonNull TextView driverContact, @NonNull TextView verificationConfirmationHeading,
      @NonNull ConstraintLayout verificationConfirmationMain,
      @NonNull ImageView verifiedProfilePicture) {
    this.rootView = rootView;
    this.backArrowVerification = backArrowVerification;
    this.carColor = carColor;
    this.carModel = carModel;
    this.carNumberPlate = carNumberPlate;
    this.carType = carType;
    this.driverContact = driverContact;
    this.verificationConfirmationHeading = verificationConfirmationHeading;
    this.verificationConfirmationMain = verificationConfirmationMain;
    this.verifiedProfilePicture = verifiedProfilePicture;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VerificationConfirmationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VerificationConfirmationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.verification_confirmation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VerificationConfirmationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backArrowVerification;
      ImageView backArrowVerification = ViewBindings.findChildViewById(rootView, id);
      if (backArrowVerification == null) {
        break missingId;
      }

      id = R.id.car_color;
      TextView carColor = ViewBindings.findChildViewById(rootView, id);
      if (carColor == null) {
        break missingId;
      }

      id = R.id.car_model;
      TextView carModel = ViewBindings.findChildViewById(rootView, id);
      if (carModel == null) {
        break missingId;
      }

      id = R.id.car_number_plate;
      TextView carNumberPlate = ViewBindings.findChildViewById(rootView, id);
      if (carNumberPlate == null) {
        break missingId;
      }

      id = R.id.car_type;
      TextView carType = ViewBindings.findChildViewById(rootView, id);
      if (carType == null) {
        break missingId;
      }

      id = R.id.driver_contact;
      TextView driverContact = ViewBindings.findChildViewById(rootView, id);
      if (driverContact == null) {
        break missingId;
      }

      id = R.id.verificationConfirmationHeading;
      TextView verificationConfirmationHeading = ViewBindings.findChildViewById(rootView, id);
      if (verificationConfirmationHeading == null) {
        break missingId;
      }

      ConstraintLayout verificationConfirmationMain = (ConstraintLayout) rootView;

      id = R.id.verifiedProfilePicture;
      ImageView verifiedProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (verifiedProfilePicture == null) {
        break missingId;
      }

      return new VerificationConfirmationBinding((ConstraintLayout) rootView, backArrowVerification,
          carColor, carModel, carNumberPlate, carType, driverContact,
          verificationConfirmationHeading, verificationConfirmationMain, verifiedProfilePicture);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
