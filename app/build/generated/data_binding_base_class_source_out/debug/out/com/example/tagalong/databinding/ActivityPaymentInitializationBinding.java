// Generated by view binder compiler. Do not edit!
package com.example.tagalong.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tagalong.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPaymentInitializationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText amountToPay;

  @NonNull
  public final ImageView backArrowPaymentInitialization;

  @NonNull
  public final Button confirmPaymentButton;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView paymentAmount;

  @NonNull
  public final TextView paymentReason;

  @NonNull
  public final EditText reasonForPayment;

  @NonNull
  public final TextView userNameHeading;

  @NonNull
  public final EditText userNameOfRecieverEditBox;

  private ActivityPaymentInitializationBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText amountToPay, @NonNull ImageView backArrowPaymentInitialization,
      @NonNull Button confirmPaymentButton, @NonNull ConstraintLayout main,
      @NonNull TextView paymentAmount, @NonNull TextView paymentReason,
      @NonNull EditText reasonForPayment, @NonNull TextView userNameHeading,
      @NonNull EditText userNameOfRecieverEditBox) {
    this.rootView = rootView;
    this.amountToPay = amountToPay;
    this.backArrowPaymentInitialization = backArrowPaymentInitialization;
    this.confirmPaymentButton = confirmPaymentButton;
    this.main = main;
    this.paymentAmount = paymentAmount;
    this.paymentReason = paymentReason;
    this.reasonForPayment = reasonForPayment;
    this.userNameHeading = userNameHeading;
    this.userNameOfRecieverEditBox = userNameOfRecieverEditBox;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPaymentInitializationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPaymentInitializationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_payment_initialization, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPaymentInitializationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountToPay;
      EditText amountToPay = ViewBindings.findChildViewById(rootView, id);
      if (amountToPay == null) {
        break missingId;
      }

      id = R.id.backArrowPaymentInitialization;
      ImageView backArrowPaymentInitialization = ViewBindings.findChildViewById(rootView, id);
      if (backArrowPaymentInitialization == null) {
        break missingId;
      }

      id = R.id.confirmPaymentButton;
      Button confirmPaymentButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmPaymentButton == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.paymentAmount;
      TextView paymentAmount = ViewBindings.findChildViewById(rootView, id);
      if (paymentAmount == null) {
        break missingId;
      }

      id = R.id.paymentReason;
      TextView paymentReason = ViewBindings.findChildViewById(rootView, id);
      if (paymentReason == null) {
        break missingId;
      }

      id = R.id.reasonForPayment;
      EditText reasonForPayment = ViewBindings.findChildViewById(rootView, id);
      if (reasonForPayment == null) {
        break missingId;
      }

      id = R.id.userNameHeading;
      TextView userNameHeading = ViewBindings.findChildViewById(rootView, id);
      if (userNameHeading == null) {
        break missingId;
      }

      id = R.id.userNameOfRecieverEditBox;
      EditText userNameOfRecieverEditBox = ViewBindings.findChildViewById(rootView, id);
      if (userNameOfRecieverEditBox == null) {
        break missingId;
      }

      return new ActivityPaymentInitializationBinding((ConstraintLayout) rootView, amountToPay,
          backArrowPaymentInitialization, confirmPaymentButton, main, paymentAmount, paymentReason,
          reasonForPayment, userNameHeading, userNameOfRecieverEditBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
